package(default_visibility = ["//k8s:__subpackages__"])

load("@io_bazel_rules_k8s//k8s:objects.bzl", "k8s_objects")
load("@k8s_configmap//:defaults.bzl", "k8s_configmap")
load("@k8s_deploy//:defaults.bzl", "k8s_deploy")
load("@k8s_job//:defaults.bzl", "k8s_job")
load("@k8s_namespace//:defaults.bzl", "k8s_namespace")
load("@k8s_service//:defaults.bzl", "k8s_service")
load("@k8s_service_account//:defaults.bzl", "k8s_service_account")

k8s_objects(
    name = "everything",
    objects = [
        ":namespace",  # Must be first
        ":configs",
        ":deployments",
        ":services",
        ":jobs",
    ],
)

_NAMESPACE = "beacon-chain"

_configs = [
    "beacon-config",
]

_deployments = [
    "beacon-chain",
    "bootnode",
    "relay",
]

_jobs = [
    "deploydepositcontract",
]

_services = [
    "beacon-chain",
    "bootnode",
    "relay",
]

_service_accounts = [
    "deploydepositcontract",
]

k8s_objects(
    name = "configs",
    objects = [":" + name + ".config" for name in _configs],
)

[k8s_configmap(
    name = name + ".config",
    template = name + ".config.yaml",
    namespace = _NAMESPACE,
) for name in _configs]

k8s_objects(
    name = "deployments",
    objects = [":" + name + ".deploy" for name in _deployments],
)

[k8s_deploy(
    name = name + ".deploy",
    template = name + ".deploy.yaml",
    namespace = _NAMESPACE,
) for name in _deployments]

k8s_objects(
    name = "jobs",
    objects = [":" + name + ".job" for name in _jobs],
)

[k8s_job(
    name = name + ".job",
    template = name + ".job.yaml",
    namespace = _NAMESPACE,
) for name in _jobs]

k8s_objects(
    name = "services",
    objects = [":" + name + ".service" for name in _services],
)

[k8s_service(
    name = name + ".service",
    template = name + ".service.yaml",
    namespace = _NAMESPACE,
) for name in _services]

k8s_objects(
    name = "service_accounts",
    objects = [":" + name + ".service_account" for name in _service_accounts],
)

[k8s_service_account(
    name = name + ".service_account",
    template = name + ".serviceaccount.yaml",
    namespace = _NAMESPACE,
) for name in _service_accounts]

k8s_namespace(
    name = "namespace",
    template = "namespace.yaml",
)
